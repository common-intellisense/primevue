{
  "name": "DataTable",
  "props": {
    "value": {
      "default": "",
      "description": "An array of objects to display.",
      "type": "null | any[]",
      "value": "",
      "description_zh": "要显示的对象数组。"
    },
    "dataKey": {
      "default": "",
      "description": "Name of the field that uniquely identifies the a record in the data.",
      "type": "string | Function",
      "value": "",
      "description_zh": "唯一标识数据中 a 记录的字段的名称。"
    },
    "rows": {
      "default": "0",
      "description": "Number of rows to display per page.",
      "type": "number",
      "value": "",
      "description_zh": "每页显示的行数。"
    },
    "first": {
      "default": "0",
      "description": "Index of the first row to be displayed.",
      "type": "number",
      "value": "",
      "description_zh": "要显示的第一行的索引。"
    },
    "totalRecords": {
      "default": "0",
      "description": "Number of total records, defaults to length of value when not defined.",
      "type": "number",
      "value": "",
      "description_zh": "总记录数，在未定义时默认为值的长度。"
    },
    "paginator": {
      "default": "false",
      "description": "When specified as true, enables the pagination.",
      "type": "boolean",
      "value": "",
      "description_zh": "指定为 true 时，启用分页。"
    },
    "paginatorPosition": {
      "default": "bottom",
      "description": "Position of the paginator, options are 'top','bottom' or 'both'.",
      "type": "both / top / bottom",
      "value": "",
      "description_zh": "分页器的位置，选项为“顶部”、“底部”或“两者”。"
    },
    "alwaysShowPaginator": {
      "default": "true",
      "description": "Whether to show it even there is only one page.",
      "type": "boolean",
      "value": "",
      "description_zh": "即使只有一页，是否显示它。"
    },
    "paginatorTemplate": {
      "default": "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown",
      "description": "Template of the paginator. It can be customized using the template property using the predefined keys.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport",
      "type": "any",
      "value": "",
      "description_zh": "分页器的模板。可以使用预定义键的 template 属性对其进行自定义。\n\n- 首页链接\n- 上一页链接\n- 页面链接\n- 下一页链接\n- 最后页链接\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPage输入\n- 当前页面报告"
    },
    "pageLinkSize": {
      "default": "5",
      "description": "Number of page links to display.",
      "type": "number",
      "value": "",
      "description_zh": "要显示的页面链接数。"
    },
    "rowsPerPageOptions": {
      "default": "",
      "description": "Array of integer values to display inside rows per page dropdown.",
      "type": "number[]",
      "value": "",
      "description_zh": "要在“每页行数”下拉列表中显示的整数值数组。"
    },
    "currentPageReportTemplate": {
      "default": "({currentPage} of {totalPages})",
      "description": "Template of the current page report element. It displays information about the pagination state. Available placeholders are the following;\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}",
      "type": "string",
      "value": "",
      "description_zh": "当前页面报表元素的模板。它显示有关分页状态的信息。可用的占位符如下;\n\n- {当前页}\n- {总页数}\n- {行}\n- {第一}\n- {最后}\n- {totalRecords}"
    },
    "lazy": {
      "default": "false",
      "description": "Defines if data is loaded and interacted with in lazy manner.",
      "type": "boolean",
      "value": "",
      "description_zh": "定义是否以延迟方式加载数据并与之交互。"
    },
    "loading": {
      "default": "false",
      "description": "Displays a loader to indicate data load is in progress.",
      "type": "boolean",
      "value": "",
      "description_zh": "显示加载程序以指示数据加载正在进行中。"
    },
    "loadingIcon": {
      "default": "",
      "description": "The icon to show while indicating data load is in progress.",
      "type": "string",
      "value": "",
      "description_zh": "指示数据加载正在进行中时要显示的图标。"
    },
    "sortField": {
      "default": "",
      "description": "Property name or a getter function of a row data used for sorting by default",
      "type": "string | Function",
      "value": "",
      "description_zh": "默认用于排序的行数据的属性名称或 getter 函数"
    },
    "sortOrder": {
      "default": "",
      "description": "Order to sort the data by default.",
      "type": "number",
      "value": "",
      "description_zh": "顺序默认对数据进行排序。"
    },
    "defaultSortOrder": {
      "default": "1",
      "description": "Default sort order of an unsorted column.",
      "type": "number",
      "value": "",
      "description_zh": "未排序列的默认排序顺序。"
    },
    "multiSortMeta": {
      "default": "",
      "description": "An array of SortMeta objects to sort the data.",
      "type": "DataTableSortMeta[]",
      "value": "",
      "description_zh": "用于对数据进行排序的 SortMeta 对象的数组。"
    },
    "sortMode": {
      "default": "single",
      "description": "Defines whether sorting works on single column or on multiple columns.",
      "type": "multiple / single",
      "value": "",
      "description_zh": "定义排序是针对单列还是对多列有效。"
    },
    "removableSort": {
      "default": "false",
      "description": "When enabled, columns can have an un-sorted state.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，列可以具有未排序状态。"
    },
    "filters": {
      "default": "",
      "description": "Filters object with key-value pairs to define the filters.",
      "type": "DataTableFilterMeta",
      "value": "",
      "description_zh": "使用键值对筛选对象以定义筛选对象。"
    },
    "filterDisplay": {
      "default": "",
      "description": "Layout of the filter elements.",
      "type": "menu / row",
      "value": "",
      "description_zh": "过滤器元件的布局。"
    },
    "globalFilterFields": {
      "default": "",
      "description": "Fields for global filter",
      "type": "string[]",
      "value": "",
      "description_zh": "全局筛选器的字段"
    },
    "filterLocale": {
      "default": "",
      "description": "Locale to use in filtering. The default locale is the host environment's current locale.",
      "type": "string",
      "value": "",
      "description_zh": "要在筛选中使用的区域设置。默认区域设置是主机环境的当前区域设置。"
    },
    "selection": {
      "default": "",
      "description": "Selected row in single mode or an array of values in multiple mode.",
      "type": "any",
      "value": "",
      "description_zh": "在单个模式下选定的行或在多个模式下的值数组。"
    },
    "selectionMode": {
      "default": "",
      "description": "Specifies the selection mode.",
      "type": "multiple / single",
      "value": "",
      "description_zh": "指定选择模式。"
    },
    "compareSelectionBy": {
      "default": "deepEquals",
      "description": "Algorithm to define if a row is selected.",
      "type": "equals / deepEquals",
      "value": "",
      "description_zh": "用于定义是否选择行的算法。"
    },
    "metaKeySelection": {
      "default": "true",
      "description": "Defines whether metaKey is requred or not for the selection. When true metaKey needs to be pressed to select or unselect an item and\nwhen set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.",
      "type": "boolean",
      "value": "",
      "description_zh": "定义是否需要 metaKey 进行选择。当需要按下 true metaKey 来选择或取消选择项目时，并且\n设置为 false 时，可以单独选择每个项目。在支持触摸的设备上，metaKeySelection 会自动关闭。"
    },
    "contextMenu": {
      "default": "false",
      "description": "Enables context menu integration.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用上下文菜单集成。"
    },
    "contextMenuSelection": {
      "default": "",
      "description": "Selected row instance with the ContextMenu.",
      "type": "any",
      "value": "",
      "description_zh": "具有 ContextMenu 的选定行实例。"
    },
    "selectAll": {
      "default": "",
      "description": "Whether all data is selected.",
      "type": "Nullable<boolean>",
      "value": "",
      "description_zh": "是否选择所有数据。"
    },
    "rowHover": {
      "default": "false",
      "description": "When enabled, background of the rows change on hover.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，行的背景会在悬停时更改。"
    },
    "csvSeparator": {
      "default": ",",
      "description": "Character to use as the csv separator.",
      "type": "string",
      "value": "",
      "description_zh": "用作 csv 分隔符的字符。"
    },
    "exportFilename": {
      "default": "download",
      "description": "Name of the exported file.",
      "type": "string",
      "value": "",
      "description_zh": "导出文件的名称。"
    },
    "exportFunction": {
      "default": "",
      "type": "Function",
      "value": "",
      "description": "",
      "description_zh": ""
    },
    "resizableColumns": {
      "default": "false",
      "description": "When enabled, columns can be resized using drag and drop.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，可以使用拖放来调整列的大小。"
    },
    "columnResizeMode": {
      "default": "fit",
      "description": "Defines whether the overall table width.",
      "type": "fit / expand",
      "value": "",
      "description_zh": "定义整体表宽度。"
    },
    "reorderableColumns": {
      "default": "false",
      "description": "When enabled, columns can be reordered using drag and drop.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，可以使用拖放对列进行重新排序。"
    },
    "expandedRows": {
      "default": "",
      "description": "A collection of row data display as expanded.",
      "type": "null | any[] | DataTableExpandedRows",
      "value": "",
      "description_zh": "行数据显示为展开的集合。"
    },
    "expandedRowIcon": {
      "default": "",
      "description": "Icon of the row toggler to display the row as expanded.",
      "type": "string",
      "value": "",
      "description_zh": "行切换器的图标，用于将行显示为展开状态。"
    },
    "collapsedRowIcon": {
      "default": "",
      "description": "Icon of the row toggler to display the row as collapsed.",
      "type": "string",
      "value": "",
      "description_zh": "行切换器的图标，用于将行显示为折叠。"
    },
    "rowGroupMode": {
      "default": "",
      "description": "Defines the row group mode.",
      "type": "rowspan / subheader",
      "value": "",
      "description_zh": "定义行组模式。"
    },
    "groupRowsBy": {
      "default": "",
      "description": "One or more field names to use in row grouping.",
      "type": "string | string[] | Function",
      "value": "",
      "description_zh": "要在行分组中使用的一个或多个字段名称。"
    },
    "expandableRowGroups": {
      "default": "false",
      "description": "Whether the row groups can be expandable.",
      "type": "boolean",
      "value": "",
      "description_zh": "行组是否可以扩展。"
    },
    "expandedRowGroups": {
      "default": "",
      "description": "An array of group field values whose groups would be rendered as expanded.",
      "type": "any[] | DataTableExpandedRows",
      "value": "",
      "description_zh": "组字段值的数组，其组将呈现为展开状态。"
    },
    "stateStorage": {
      "default": "session",
      "description": "Defines where a stateful table keeps its state.",
      "type": "local / session",
      "value": "",
      "description_zh": "定义有状态表保持其状态的位置。"
    },
    "stateKey": {
      "default": "",
      "description": "Unique identifier of a stateful table to use in state storage.",
      "type": "string",
      "value": "",
      "description_zh": "要在状态存储中使用的有状态表的唯一标识符。"
    },
    "editMode": {
      "default": "",
      "description": "Defines the incell editing mode.",
      "type": "cell / row",
      "value": "",
      "description_zh": "定义 incell 编辑模式。"
    },
    "editingRows": {
      "default": "",
      "description": "A collection of rows to represent the current editing data in row edit mode.",
      "type": "any[] | DataTableEditingRows",
      "value": "",
      "description_zh": "在行编辑模式下表示当前编辑数据的行集合。"
    },
    "rowClass": {
      "default": "",
      "type": "Function",
      "value": "",
      "description": "",
      "description_zh": ""
    },
    "rowStyle": {
      "default": "",
      "type": "Function",
      "value": "",
      "description": "",
      "description_zh": ""
    },
    "scrollable": {
      "default": "false",
      "description": "When specified, enables horizontal and/or vertical scrolling.",
      "type": "boolean",
      "value": "",
      "description_zh": "指定后，启用水平和/或垂直滚动。"
    },
    "scrollHeight": {
      "default": "",
      "description": "Height of the scroll viewport in fixed pixels or the 'flex' keyword for a dynamic size.",
      "type": "string",
      "value": "",
      "description_zh": "滚动视口的高度（以固定像素为单位）或动态大小的“flex”关键字。"
    },
    "virtualScrollerOptions": {
      "default": "",
      "description": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it.\nNote: Currently only vertical orientation mode is supported.",
      "type": "VirtualScrollerProps",
      "value": "",
      "description_zh": "是否使用 virtualScroller 功能。VirtualScroller 组件的属性可以像其中的对象一样使用。\n注意：目前仅支持垂直方向模式。"
    },
    "frozenValue": {
      "default": "",
      "description": "Items of the frozen part in scrollable DataTable.",
      "type": "null | any[]",
      "value": "",
      "description_zh": "可滚动 DataTable 中冻结部分的项。"
    },
    "breakpoint": {
      "default": "960px",
      "description": "The breakpoint to define the maximum width boundary when using stack responsive layout.",
      "type": "string",
      "value": "",
      "description_zh": "使用堆栈响应式布局时用于定义最大宽度边界的断点。"
    },
    "showGridlines": {
      "default": "false",
      "description": "Whether to show grid lines between cells.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否在单元格之间显示网格线。"
    },
    "stripedRows": {
      "default": "false",
      "description": "Whether to displays rows with alternating colors.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否显示颜色交替的行。"
    },
    "size": {
      "default": "",
      "description": "Defines the size of the table.",
      "type": "small / large",
      "value": "",
      "description_zh": "定义表的大小。"
    },
    "tableStyle": {
      "default": "",
      "description": "Inline style of the table element.",
      "type": "any",
      "value": "",
      "description_zh": "表格元素的内联样式。"
    },
    "tableClass": {
      "default": "",
      "description": "Style class of the table element.",
      "type": "any",
      "value": "",
      "description_zh": "table 元素的 Style 类。"
    },
    "tableProps": {
      "default": "",
      "description": "Used to pass all properties of the TableHTMLAttributes to table element inside the component.",
      "type": "TableHTMLAttributes",
      "value": "",
      "description_zh": "用于将 TableHTMLAttributes 的所有属性传递给组件内的 table 元素。"
    },
    "filterInputProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLInputElement to the focusable filter input element inside the component.",
      "type": "InputHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLInputElement 的所有属性传递给组件内的可聚焦筛选器输入元素。"
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<DataTablePassThroughOptions>",
      "value": "",
      "description_zh": "用于将属性传递给组件内部的 DOM 元素。"
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": "",
      "description_zh": "用于配置组件的直通 （pt） 选项。"
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，它会删除核心中与组件相关的样式。"
    }
  },
  "events": [
    {
      "name": "update:first",
      "description": "Emitted when the first changes.",
      "params": "(value: number) => void",
      "description_zh": "在第一次更改时发出。"
    },
    {
      "name": "update:rows",
      "description": "Emitted when the rows changes.",
      "params": "(value: number) => void",
      "description_zh": "在行更改时发出。"
    },
    {
      "name": "update:sortField",
      "description": "Emitted when the sortField changes.",
      "params": "(value: string) => void",
      "description_zh": "在 sortField 更改时发出。"
    },
    {
      "name": "update:sortOrder",
      "description": "Emitted when the sortOrder changes.",
      "params": "(value: undefined | number) => void",
      "description_zh": "在 sortOrder 更改时发出。"
    },
    {
      "name": "update:multiSortMeta",
      "description": "Emitted when the multiSortMeta changes.",
      "params": "(value: undefined | null | DataTableSortMeta[]) => void",
      "description_zh": "在 multiSortMeta 更改时发出。"
    },
    {
      "name": "update:selection",
      "description": "Emitted when the selection changes.",
      "params": "(value: any) => void",
      "description_zh": "在选区更改时发出。"
    },
    {
      "name": "update:contextMenuSelection",
      "description": "Emitted when the contextMenuSelection changes.",
      "params": "(value: any) => void",
      "description_zh": "在 contextMenuSelection 更改时发出。"
    },
    {
      "name": "update:expandedRows",
      "description": "Emitted when the expandedRows changes.",
      "params": "(value: any[] | DataTableExpandedRows) => void",
      "description_zh": "在 expandedRows 更改时发出。"
    },
    {
      "name": "update:expandedRowGroups",
      "description": "Emitted when the expandedRowGroups changes.",
      "params": "(value: any[] | DataTableExpandedRows) => void",
      "description_zh": "在 expandedRowGroups 更改时发出。"
    },
    {
      "name": "update:filters",
      "description": "Emitted when the filters changes.",
      "params": "(value: DataTableFilterMeta) => void",
      "description_zh": "在过滤器更改时发出。"
    },
    {
      "name": "update:editingRows",
      "description": "Emitted when the editingRows changes.",
      "params": "(value: any[] | DataTableEditingRows) => void",
      "description_zh": "在 editingRows 更改时发出。"
    },
    {
      "name": "page",
      "description": "Callback to invoke on pagination. Sort and Filter information is also available for lazy loading implementation.",
      "params": "(event: DataTablePageEvent) => void",
      "description_zh": "在分页时调用的回调。排序和筛选信息也可用于延迟加载实现。"
    },
    {
      "name": "sort",
      "description": "Callback to invoke on sort. Page and Filter information is also available for lazy loading implementation.",
      "params": "(event: DataTableSortEvent) => void",
      "description_zh": "排序时调用的回调。页面和过滤器信息也可用于延迟加载实现。"
    },
    {
      "name": "filter",
      "description": "Event to emit after filtering, not triggered in lazy mode.",
      "params": "(event: DataTableFilterEvent) => void",
      "description_zh": "过滤后发出的事件，在延迟模式下不触发。"
    },
    {
      "name": "value-change",
      "description": "Callback to invoke after filtering, sorting, pagination and cell editing to pass the rendered value.",
      "params": "(value: any[]) => void",
      "description_zh": "在过滤、排序、分页和单元格编辑后调用的回调，以传递渲染的值。"
    },
    {
      "name": "row-click",
      "description": "Callback to invoke when a row is clicked.",
      "params": "(event: DataTableRowClickEvent) => void",
      "description_zh": "单击行时调用的回调。"
    },
    {
      "name": "row-dblclick",
      "description": "Callback to invoke when a row is double clicked.",
      "params": "(event: DataTableRowDoubleClickEvent) => void",
      "description_zh": "双击行时调用的回调。"
    },
    {
      "name": "row-contextmenu",
      "description": "Callback to invoke when a row is selected with a ContextMenu.",
      "params": "(event: DataTableRowContextMenuEvent) => void",
      "description_zh": "使用 ContextMenu 选择行时要调用的回调。"
    },
    {
      "name": "row-select",
      "description": "Callback to invoke when a row is selected.",
      "params": "(event: DataTableRowSelectEvent) => void",
      "description_zh": "选择行时调用的回调。"
    },
    {
      "name": "row-select-all",
      "description": "Fired when header checkbox is checked.",
      "params": "(event: DataTableRowSelectAllEvent) => void",
      "description_zh": "选中标头复选框时触发。"
    },
    {
      "name": "row-unselect-all",
      "description": "Fired when header checkbox is unchecked.",
      "params": "(event: DataTableRowUnselectAllEvent) => void",
      "description_zh": "在未选中标头复选框时触发。"
    },
    {
      "name": "row-unselect",
      "description": "Callback to invoke when a row is unselected.",
      "params": "(event: DataTableRowUnselectEvent) => void",
      "description_zh": "取消选择行时调用的回调。"
    },
    {
      "name": "select-all-change",
      "description": "Callback to invoke when all data is selected.",
      "params": "(event: DataTableSelectAllChangeEvent) => void",
      "description_zh": "选择所有数据时调用的回调。"
    },
    {
      "name": "column-resize-end",
      "description": "Callback to invoke when a column is resized.",
      "params": "(event: DataTableColumnResizeEndEvent) => void",
      "description_zh": "调整列大小时调用的回调。"
    },
    {
      "name": "column-reorder",
      "description": "Callback to invoke when a column is reordered.",
      "params": "(event: DataTableColumnReorderEvent) => void",
      "description_zh": "对列重新排序时调用的回调。"
    },
    {
      "name": "row-reorder",
      "description": "Callback to invoke when a row is reordered.",
      "params": "(event: DataTableRowReorderEvent) => void",
      "description_zh": "在对行重新排序时调用的回调。"
    },
    {
      "name": "row-expand",
      "description": "Callback to invoke when a row is expanded.",
      "params": "(event: DataTableRowExpandEvent) => void",
      "description_zh": "展开行时调用的回调。"
    },
    {
      "name": "row-collapse",
      "description": "Callback to invoke when a row is collapsed.",
      "params": "(event: DataTableRowCollapseEvent) => void",
      "description_zh": "在行折叠时调用的回调。"
    },
    {
      "name": "rowgroup-expand",
      "description": "Callback to invoke when a row group is expanded.",
      "params": "(event: DataTableRowExpandEvent) => void",
      "description_zh": "展开行组时调用的回调。"
    },
    {
      "name": "rowgroup-collapse",
      "description": "Callback to invoke when a row group is collapsed.",
      "params": "(event: DataTableRowCollapseEvent) => void",
      "description_zh": "行组折叠时调用的回调。"
    },
    {
      "name": "cell-edit-init",
      "description": "Callback to invoke when cell edit is initiated.",
      "params": "(event: DataTableCellEditInitEvent) => void",
      "description_zh": "启动单元格编辑时调用的回调。"
    },
    {
      "name": "cell-edit-complete",
      "description": "Callback to invoke when cell edit is completed.",
      "params": "(event: DataTableCellEditCompleteEvent) => void",
      "description_zh": "单元格编辑完成时调用的回调。"
    },
    {
      "name": "cell-edit-cancel",
      "description": "Callback to invoke when cell edit is cancelled with escape key.",
      "params": "(event: DataTableCellEditCancelEvent) => void",
      "description_zh": "使用转义键取消单元格编辑时调用的回调。"
    },
    {
      "name": "row-edit-init",
      "description": "Callback to invoke when row edit is initiated.",
      "params": "(event: DataTableRowEditInitEvent) => void",
      "description_zh": "启动行编辑时调用的回调。"
    },
    {
      "name": "row-edit-save",
      "description": "Callback to invoke when row edit is saved.",
      "params": "(event: DataTableRowEditSaveEvent) => void",
      "description_zh": "保存行编辑时调用的回调。"
    },
    {
      "name": "row-edit-cancel",
      "description": "Callback to invoke when row edit is cancelled.",
      "params": "(event: DataTableRowEditCancelEvent) => void",
      "description_zh": "取消行编辑时调用的回调。"
    },
    {
      "name": "state-restore",
      "description": "Invoked when a stateful table saves the state.",
      "params": "(event: DataTableStateEvent) => void",
      "description_zh": "在有状态表保存状态时调用。"
    },
    {
      "name": "state-save",
      "description": "Invoked when a stateful table restores the state.",
      "params": "(event: DataTableStateEvent) => void",
      "description_zh": "在有状态表还原状态时调用。"
    }
  ],
  "link": "https://primevue.org/datatable/",
  "link_zh": "https://primevue.org/datatable/",
  "methods": []
}
