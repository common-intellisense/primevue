{
  "name": "PickList",
  "props": {
    "modelValue": {
      "default": "",
      "description": "Value of the component as a multidimensional array.",
      "type": "any[][]",
      "value": "",
      "description_zh": "作为多维数组的组件的值。"
    },
    "selection": {
      "default": "",
      "description": "Selected items in the list as a multidimensional array.",
      "type": "any[][]",
      "value": "",
      "description_zh": "列表中的选定项作为多维数组。"
    },
    "dataKey": {
      "default": "",
      "description": "Name of the field that uniquely identifies the a record in the data.",
      "type": "string",
      "value": "",
      "description_zh": "唯一标识数据中 a 记录的字段的名称。"
    },
    "metaKeySelection": {
      "default": "true",
      "description": "Defines whether metaKey is requred or not for the selection.\nWhen true metaKey needs to be pressed to select or unselect an item and\nwhen set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.",
      "type": "boolean",
      "value": "",
      "description_zh": "定义是否需要 metaKey 进行选择。\n当需要按下 true metaKey 来选择或取消选择项目时，并且\n设置为 false 时，可以单独选择每个项目。在支持触摸的设备上，metaKeySelection 会自动关闭。"
    },
    "listStyle": {
      "default": "",
      "description": "Inline style of the the list element.",
      "type": "any",
      "value": "",
      "description_zh": "列表元素的内联样式。"
    },
    "responsive": {
      "default": "true",
      "description": "Whether the list optimizes layout based on screen size.",
      "type": "boolean",
      "value": "",
      "description_zh": "列表是否根据屏幕尺寸优化布局。"
    },
    "breakpoint": {
      "default": "960px",
      "description": "The breakpoint to define the maximum width boundary when responsiveness is enabled.",
      "type": "string",
      "value": "",
      "description_zh": "启用响应能力时用于定义最大宽度边界的断点。"
    },
    "stripedRows": {
      "default": "false",
      "description": "Whether to displays rows with alternating colors.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否显示颜色交替的行。"
    },
    "showSourceControls": {
      "default": "true",
      "description": "Whether to show buttons of source list.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否显示源列表的按钮。"
    },
    "showTargetControls": {
      "default": "true",
      "description": "Whether to show buttons of target list.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否显示目标列表的按钮。"
    },
    "tabindex": {
      "default": "",
      "description": "Index of the list element in tabbing order.",
      "type": "string | number",
      "value": "",
      "description_zh": "按 Tab 键顺序排列的列表元素的索引。"
    },
    "targetListProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLAttributes to the target list element.",
      "type": "HTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLAttributes 的所有属性传递给目标列表元素。"
    },
    "sourceListProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLAttributes to the source list element.",
      "type": "HTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLAttributes 的所有属性传递给源列表元素。"
    },
    "moveUpButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move up button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的上移按钮。"
    },
    "moveTopButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move top button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的“移动顶部”按钮。"
    },
    "moveDownButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move down button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的下移按钮。"
    },
    "moveBottomButtonProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move bottom button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的移动底部按钮。"
    },
    "moveToTargetProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move to target button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的“移动到目标”按钮。"
    },
    "moveAllToTargetProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move all to target button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的“全部移动到目标”按钮。"
    },
    "moveToSourceProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move to source button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的“移动到源”按钮。"
    },
    "moveAllToSourceProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLButtonElement to the move all to source button inside the component.",
      "type": "ButtonHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLButtonElement 的所有属性传递给组件内的“全部移动到源”按钮。"
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<PickListPassThroughOptions>",
      "value": "",
      "description_zh": "用于将属性传递给组件内部的 DOM 元素。"
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": "",
      "description_zh": "用于配置组件的直通 （pt） 选项。"
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，它会删除核心中与组件相关的样式。"
    }
  },
  "events": [
    {
      "name": "update:modelValue",
      "description": "Emitted when the value changes.",
      "params": "(value: any[][]) => void",
      "description_zh": "在值更改时发出。"
    },
    {
      "name": "update:selection",
      "description": "Emitted when the selection changes.",
      "params": "(value: any[][]) => void",
      "description_zh": "在选区更改时发出。"
    },
    {
      "name": "reorder",
      "description": "Callback to invoke when the list is reordered.",
      "params": "(event: PickListReorderEvent) => void",
      "description_zh": "在列表重新排序时调用的回调。"
    },
    {
      "name": "selection-change",
      "description": "Callback to invoke when one or more items are moved to the other list.",
      "params": "(event: PickListSelectionChangeEvent) => void",
      "description_zh": "将一个或多个项目移动到另一个列表时调用的回调。"
    },
    {
      "name": "move-to-target",
      "description": "Callback to invoke when one or more items are moved to the target list.",
      "params": "(event: PickListMoveToTargetEvent) => void",
      "description_zh": "将一个或多个项目移动到目标列表时调用的回调。"
    },
    {
      "name": "move-all-to-target",
      "description": "Callback to invoke when all items are moved to the target list.",
      "params": "(event: PickListMoveAllToTargetEvent) => void",
      "description_zh": "当所有项目都移动到目标列表时调用的回调。"
    },
    {
      "name": "move-to-source",
      "description": "Callback to invoke when one or more items are moved to the source list.",
      "params": "(event: PickListMoveToSourceEvent) => void",
      "description_zh": "将一个或多个项目移动到源列表时调用的回调。"
    },
    {
      "name": "move-all-to-source",
      "description": "Callback to invoke when all items are moved to the source list.",
      "params": "(event: PickListMoveAllToSourceEvent) => void",
      "description_zh": "当所有项目都移动到源列表时调用的回调。"
    }
  ],
  "link": "https://primevue.org/picklist/",
  "link_zh": "https://primevue.org/picklist/",
  "methods": []
}
