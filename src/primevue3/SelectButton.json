{
  "name": "SelectButton",
  "props": {
    "modelValue": {
      "default": "",
      "description": "Value of the component.",
      "type": "any",
      "value": "",
      "description_zh": "组件的值。"
    },
    "options": {
      "default": "",
      "description": "An array of selectitems to display as the available options.",
      "type": "any[]",
      "value": "",
      "description_zh": "要显示为可用选项的 selectitems 数组。"
    },
    "optionLabel": {
      "default": "",
      "description": "Property name or getter function to use as the label of an option.",
      "type": "string | Function",
      "value": "",
      "description_zh": "属性名称或 getter 函数用作选项的标签。"
    },
    "optionValue": {
      "default": "",
      "description": "Property name or getter function to use as the value of an option, defaults to the option itself when not defined.",
      "type": "string | Function",
      "value": "",
      "description_zh": "用作选项值的属性名称或 getter 函数，在未定义时默认为选项本身。"
    },
    "optionDisabled": {
      "default": "",
      "description": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.",
      "type": "string | Function",
      "value": "",
      "description_zh": "用作选项的禁用标志的属性名称或 getter 函数，在未定义时默认为 false。"
    },
    "multiple": {
      "default": "false",
      "description": "When specified, allows selecting multiple values.",
      "type": "boolean",
      "value": "",
      "description_zh": "指定时，允许选择多个值。"
    },
    "disabled": {
      "default": "false",
      "description": "When present, it specifies that the element should be disabled.",
      "type": "boolean",
      "value": "",
      "description_zh": "如果存在，则指定应禁用该元素。"
    },
    "dataKey": {
      "default": "",
      "description": "A property to uniquely identify an option.",
      "type": "string",
      "value": "",
      "description_zh": "用于唯一标识选项的属性。"
    },
    "unselectable": {
      "default": "false",
      "description": "Whether selection can be cleared.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否可以清除选择。"
    },
    "aria-labelledby": {
      "default": "",
      "description": "Identifier of the underlying element.",
      "type": "string",
      "value": "",
      "description_zh": "基础元素的标识符。"
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<SelectButtonPassThroughOptions>",
      "value": "",
      "description_zh": "用于将属性传递给组件内部的 DOM 元素。"
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": "",
      "description_zh": "用于配置组件的直通 （pt） 选项。"
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，它会删除核心中与组件相关的样式。"
    }
  },
  "events": [
    {
      "name": "update:modelValue",
      "description": "Emitted when the value changes.",
      "params": "(value: any) => void",
      "description_zh": "在值更改时发出。"
    },
    {
      "name": "change",
      "description": "Callback to invoke on value change.",
      "params": "(event: SelectButtonChangeEvent) => void",
      "description_zh": "在值更改时调用的回调。"
    },
    {
      "name": "focus",
      "description": "Callback to invoke on focus.",
      "params": "(event: Event) => void",
      "description_zh": "在焦点上调用的回调。"
    },
    {
      "name": "blur",
      "description": "Callback to invoke on blur.",
      "params": "(event: Event) => void",
      "description_zh": "在模糊时调用的回调。"
    }
  ],
  "link": "https://primevue.org/selectbutton/",
  "link_zh": "https://primevue.org/selectbutton/",
  "methods": []
}
