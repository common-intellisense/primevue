{
  "name": "ToggleButton",
  "props": {
    "modelValue": {
      "default": "false",
      "description": "Value of the component.",
      "type": "boolean",
      "value": "",
      "description_zh": "组件的值。"
    },
    "onIcon": {
      "default": "",
      "description": "Icon for the on state.",
      "type": "string",
      "value": "",
      "description_zh": "开启状态的图标。"
    },
    "offIcon": {
      "default": "",
      "description": "Icon for the off state.",
      "type": "string",
      "value": "",
      "description_zh": "关闭状态的图标。"
    },
    "onLabel": {
      "default": "yes",
      "description": "Label for the on state.",
      "type": "string",
      "value": "",
      "description_zh": "开启状态的标签。"
    },
    "offLabel": {
      "default": "no",
      "description": "Label for the off state.",
      "type": "string",
      "value": "",
      "description_zh": "关闭状态的标签。"
    },
    "iconPos": {
      "default": "left",
      "description": "Position of the icon.",
      "type": "left / right",
      "value": "",
      "description_zh": "图标的位置。"
    },
    "disabled": {
      "default": "false",
      "description": "When present, it specifies that the element should be disabled.",
      "type": "boolean",
      "value": "",
      "description_zh": "如果存在，则指定应禁用该元素。"
    },
    "tabindex": {
      "default": "",
      "description": "Index of the element in tabbing order.",
      "type": "string",
      "value": "",
      "description_zh": "按 Tab 键顺序排列的元素索引。"
    },
    "inputId": {
      "default": "",
      "description": "Identifier of the focus input to match a label defined for the chips.",
      "type": "string",
      "value": "",
      "description_zh": "焦点输入的标识符，用于匹配为芯片定义的标签。"
    },
    "inputClass": {
      "default": "",
      "description": "Style class of the input field.",
      "type": "string | object",
      "value": "",
      "description_zh": "输入字段的样式类。"
    },
    "inputStyle": {
      "default": "",
      "description": "Inline style of the input field.",
      "type": "object",
      "value": "",
      "description_zh": "输入字段的内联样式。"
    },
    "inputProps": {
      "default": "",
      "description": "Used to pass all properties of the HTMLInputElement to the focusable input element inside the component.",
      "type": "InputHTMLAttributes",
      "value": "",
      "description_zh": "用于将 HTMLInputElement 的所有属性传递给组件内的可聚焦输入元素。"
    },
    "aria-labelledby": {
      "default": "",
      "description": "Establishes relationships between the component and label(s) where its value should be one or more element IDs.",
      "type": "string",
      "value": "",
      "description_zh": "在组件和标签之间建立关系，其中其值应为一个或多个元素 ID。"
    },
    "aria-label": {
      "default": "",
      "description": "Establishes a string value that labels the component.",
      "type": "string",
      "value": "",
      "description_zh": "建立标记组件的字符串值。"
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<ToggleButtonPassThroughOptions>",
      "value": "",
      "description_zh": "用于将属性传递给组件内部的 DOM 元素。"
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": "",
      "description_zh": "用于配置组件的直通 （pt） 选项。"
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，它会删除核心中与组件相关的样式。"
    }
  },
  "events": [
    {
      "name": "update:modelValue",
      "description": "Emitted when the value changes.",
      "params": "(value: boolean) => void",
      "description_zh": "在值更改时发出。"
    },
    {
      "name": "change",
      "description": "Callback to invoke on value change.",
      "params": "(event: Event) => void",
      "description_zh": "在值更改时调用的回调。"
    },
    {
      "name": "focus",
      "description": "Callback to invoke when the component receives focus.",
      "params": "(event: Event) => void",
      "description_zh": "在组件接收焦点时调用的回调。"
    },
    {
      "name": "blur",
      "description": "Callback to invoke when the component loses focus.",
      "params": "(event: Event) => void",
      "description_zh": "在组件失去焦点时调用的回调。"
    }
  ],
  "link": "https://primevue.org/togglebutton/",
  "link_zh": "https://primevue.org/togglebutton/",
  "methods": []
}
