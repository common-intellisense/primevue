{
  "name": "TreeTable",
  "props": {
    "value": {
      "default": "",
      "description": "An array of treenodes.",
      "type": "TreeNode[]",
      "value": "",
      "description_zh": "树节点的数组。"
    },
    "expandedKeys": {
      "default": "",
      "description": "A map of keys to represent the state of the tree expansion state in controlled mode.",
      "type": "TreeTableExpandedKeys",
      "value": "",
      "description_zh": "一个键映射，用于表示受控模式下树扩展状态的状态。"
    },
    "selectionKeys": {
      "default": "",
      "description": "A map of keys to control the selection state.",
      "type": "TreeTableSelectionKeys",
      "value": "",
      "description_zh": "用于控制选择状态的键映射。"
    },
    "selectionMode": {
      "default": "",
      "description": "Defines the selection mode.",
      "type": "multiple / checkbox / single",
      "value": "",
      "description_zh": "定义选择模式。"
    },
    "metaKeySelection": {
      "default": "true",
      "description": "Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually.\nOn touch enabled devices, metaKeySelection is turned off automatically.",
      "type": "boolean",
      "value": "",
      "description_zh": "定义如何选择多个项目，何时需要按下 true metaKey 来选择或取消选择某个项目，以及何时设置为 false 选择每个项目可以单独切换。\n在支持触摸的设备上，metaKeySelection 会自动关闭。"
    },
    "rows": {
      "default": "",
      "description": "Number of rows to display per page.",
      "type": "number",
      "value": "",
      "description_zh": "每页显示的行数。"
    },
    "first": {
      "default": "0",
      "description": "Index of the first row to be displayed.",
      "type": "number",
      "value": "",
      "description_zh": "要显示的第一行的索引。"
    },
    "totalRecords": {
      "default": "",
      "description": "Number of total records, defaults to length of value when not defined.",
      "type": "number",
      "value": "",
      "description_zh": "总记录数，在未定义时默认为值的长度。"
    },
    "paginator": {
      "default": "false",
      "description": "When specified as true, enables the pagination.",
      "type": "boolean",
      "value": "",
      "description_zh": "指定为 true 时，启用分页。"
    },
    "paginatorPosition": {
      "default": "bottom",
      "description": "Position of the paginator, options are 'top','bottom' or 'both'.",
      "type": "both / top / bottom",
      "value": "",
      "description_zh": "分页器的位置，选项为“顶部”、“底部”或“两者”。"
    },
    "alwaysShowPaginator": {
      "default": "true",
      "description": "Whether to show it even there is only one page.",
      "type": "boolean",
      "value": "",
      "description_zh": "即使只有一页，是否显示它。"
    },
    "paginatorTemplate": {
      "default": "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown",
      "description": "Template of the paginator. It can be customized using the template property using the predefined keys. Here are the available elements that can be placed inside a paginator in any order.\n\n- FirstPageLink\n- PrevPageLink\n- PageLinks\n- NextPageLink\n- LastPageLink\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPageInput\n- CurrentPageReport",
      "type": "string",
      "value": "",
      "description_zh": "分页器的模板。可以使用预定义键的 template 属性对其进行自定义。以下是可以按任意顺序放置在分页器中的可用元素。\n\n- 首页链接\n- 上一页链接\n- 页面链接\n- 下一页链接\n- 最后页链接\n- RowsPerPageDropdown\n- JumpToPageDropdown\n- JumpToPage输入\n- 当前页面报告"
    },
    "pageLinkSize": {
      "default": "5",
      "description": "Number of page links to display.",
      "type": "number",
      "value": "",
      "description_zh": "要显示的页面链接数。"
    },
    "rowsPerPageOptions": {
      "default": "",
      "description": "Array of integer values to display inside rows per page dropdown.",
      "type": "number[]",
      "value": "",
      "description_zh": "要在“每页行数”下拉列表中显示的整数值数组。"
    },
    "currentPageReportTemplate": {
      "default": "({currentPage} of {totalPages})",
      "description": "Template of the current page report element. It displays information about the pagination state.\n\n- {currentPage}\n- {totalPages}\n- {rows}\n- {first}\n- {last}\n- {totalRecords}",
      "type": "string",
      "value": "",
      "description_zh": "当前页面报表元素的模板。它显示有关分页状态的信息。\n\n- {当前页}\n- {总页数}\n- {行}\n- {第一}\n- {最后}\n- {totalRecords}"
    },
    "lazy": {
      "default": "false",
      "description": "Defines if data is loaded and interacted with in lazy manner.",
      "type": "boolean",
      "value": "",
      "description_zh": "定义是否以延迟方式加载数据并与之交互。"
    },
    "loading": {
      "default": "false",
      "description": "Displays a loader to indicate data load is in progress.",
      "type": "boolean",
      "value": "",
      "description_zh": "显示加载程序以指示数据加载正在进行中。"
    },
    "loadingIcon": {
      "default": "",
      "description": "The icon to show while indicating data load is in progress.",
      "type": "string",
      "value": "",
      "description_zh": "指示数据加载正在进行中时要显示的图标。"
    },
    "rowHover": {
      "default": "false",
      "description": "When enabled, background of the rows change on hover.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，行的背景会在悬停时更改。"
    },
    "autoLayout": {
      "default": "false",
      "description": "Whether the cell widths scale according to their content or not.",
      "type": "boolean",
      "value": "",
      "description_zh": "单元格宽度是否根据其内容缩放。"
    },
    "sortField": {
      "default": "",
      "description": "Property name or a getter function of a row data used for sorting by default.",
      "type": "string | Function",
      "value": "",
      "description_zh": "默认情况下，用于排序的行数据的属性名称或 getter 函数。"
    },
    "sortOrder": {
      "default": "",
      "description": "Order to sort the data by default.",
      "type": "number",
      "value": "",
      "description_zh": "顺序默认对数据进行排序。"
    },
    "defaultSortOrder": {
      "default": "1",
      "description": "Default sort order of an unsorted column.",
      "type": "number",
      "value": "",
      "description_zh": "未排序列的默认排序顺序。"
    },
    "multiSortMeta": {
      "default": "",
      "description": "An array of SortMeta objects to sort the data by default in multiple sort mode.",
      "type": "null | TreeTableSortMeta[]",
      "value": "",
      "description_zh": "默认情况下，在多排序模式下对数据进行排序的 SortMeta 对象数组。"
    },
    "sortMode": {
      "default": "single",
      "description": "Defines whether sorting works on single column or on multiple columns.",
      "type": "multiple / single",
      "value": "",
      "description_zh": "定义排序是针对单列还是对多列有效。"
    },
    "removableSort": {
      "default": "false",
      "description": "When enabled, columns can have an un-sorted state.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，列可以具有未排序状态。"
    },
    "filters": {
      "default": "",
      "description": "Filters object with key-value pairs to define the filters.",
      "type": "TreeTableFilterMeta",
      "value": "",
      "description_zh": "使用键值对筛选对象以定义筛选对象。"
    },
    "filterMode": {
      "default": "lenient",
      "description": "Mode for filtering.",
      "type": "strict / lenient",
      "value": "",
      "description_zh": "过滤模式。"
    },
    "filterLocale": {
      "default": "",
      "description": "Locale to use in filtering. The default locale is the host environment's current locale.",
      "type": "string",
      "value": "",
      "description_zh": "要在筛选中使用的区域设置。默认区域设置是主机环境的当前区域设置。"
    },
    "resizableColumns": {
      "default": "false",
      "description": "When enabled, columns can be resized using drag and drop.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，可以使用拖放来调整列的大小。"
    },
    "columnResizeMode": {
      "default": "fit",
      "description": "Defines whether the overall table width should change on column resize.",
      "type": "fit / expand",
      "value": "",
      "description_zh": "定义在调整列大小时是否应更改整个表格宽度。"
    },
    "indentation": {
      "default": "1",
      "description": "Indentation factor as rem value for children nodes.",
      "type": "number",
      "value": "",
      "description_zh": "缩进因子作为子节点的 rem 值。"
    },
    "showGridlines": {
      "default": "false",
      "description": "Whether to show grid lines between cells.",
      "type": "boolean",
      "value": "",
      "description_zh": "是否在单元格之间显示网格线。"
    },
    "scrollable": {
      "default": "false",
      "description": "When specified, enables horizontal and/or vertical scrolling.",
      "type": "boolean",
      "value": "",
      "description_zh": "指定后，启用水平和/或垂直滚动。"
    },
    "scrollHeight": {
      "default": "",
      "description": "Height of the scroll viewport in fixed pixels or the 'flex' keyword for a dynamic size.",
      "type": "string",
      "value": "",
      "description_zh": "滚动视口的高度（以固定像素为单位）或动态大小的“flex”关键字。"
    },
    "scrollDirection": {
      "default": "vertical",
      "description": "Orientation of the scrolling.",
      "type": "both / horizontal / vertical",
      "value": "",
      "description_zh": "滚动的方向。"
    },
    "responsiveLayout": {
      "default": "stack",
      "description": "Defines the responsive mode, currently only option is scroll.",
      "type": "scroll / stack",
      "value": "",
      "description_zh": "定义响应模式，当前唯一的选项是滚动。"
    },
    "size": {
      "default": "",
      "description": "Defines the size of the table.",
      "type": "small / large",
      "value": "",
      "description_zh": "定义表的大小。"
    },
    "tableProps": {
      "default": "",
      "description": "Props to pass to the table element.",
      "type": "any",
      "value": "",
      "description_zh": "要传递给 table 元素的 props。"
    },
    "pt": {
      "default": "",
      "description": "Used to pass attributes to DOM elements inside the component.",
      "type": "PassThrough<TreeTablePassThroughOptions>",
      "value": "",
      "description_zh": "用于将属性传递给组件内部的 DOM 元素。"
    },
    "ptOptions": {
      "default": "",
      "description": "Used to configure passthrough(pt) options of the component.",
      "type": "PassThroughOptions",
      "value": "",
      "description_zh": "用于配置组件的直通 （pt） 选项。"
    },
    "unstyled": {
      "default": "false",
      "description": "When enabled, it removes component related styles in the core.",
      "type": "boolean",
      "value": "",
      "description_zh": "启用后，它会删除核心中与组件相关的样式。"
    }
  },
  "events": [
    {
      "name": "update:expandedKeys",
      "description": "Emitted when the expanded keys change.",
      "params": "(value: TreeTableExpandedKeys) => void",
      "description_zh": "在扩展键更改时发出。"
    },
    {
      "name": "update:selectionKeys",
      "description": "Emitted when the selection keys change.",
      "params": "(event: TreeTableSelectionKeys) => void",
      "description_zh": "在选择键更改时发出。"
    },
    {
      "name": "update:first",
      "description": "Emitted when the first changes.",
      "params": "(value: number) => void",
      "description_zh": "在第一次更改时发出。"
    },
    {
      "name": "update:rows",
      "description": "Emitted when the rows changes.",
      "params": "(value: number) => void",
      "description_zh": "在行更改时发出。"
    },
    {
      "name": "update:sortField",
      "description": "Emitted when the sortField changes.",
      "params": "(value: string) => void",
      "description_zh": "在 sortField 更改时发出。"
    },
    {
      "name": "update:sortOrder",
      "description": "Emitted when the sortOrder changes.",
      "params": "(value: undefined | number) => void",
      "description_zh": "在 sortOrder 更改时发出。"
    },
    {
      "name": "update:multiSortMeta",
      "description": "Emitted when the multiSortMeta changes.",
      "params": "(value: undefined | null | TreeTableSortMeta[]) => void",
      "description_zh": "在 multiSortMeta 更改时发出。"
    },
    {
      "name": "page",
      "description": "Callback to invoke on pagination. Sort and Filter information is also available for lazy loading implementation.",
      "params": "(event: TreeTablePageEvent) => void",
      "description_zh": "在分页时调用的回调。排序和筛选信息也可用于延迟加载实现。"
    },
    {
      "name": "sort",
      "description": "Callback to invoke on sort. Page and Filter information is also available for lazy loading implementation.",
      "params": "(event: TreeTableSortEvent) => void",
      "description_zh": "排序时调用的回调。页面和过滤器信息也可用于延迟加载实现。"
    },
    {
      "name": "filter",
      "description": "Event to emit after filtering, not triggered in lazy mode.",
      "params": "(event: TreeTableFilterEvent) => void",
      "description_zh": "过滤后发出的事件，在延迟模式下不触发。"
    },
    {
      "name": "node-select",
      "description": "Callback to invoke when a node is selected.",
      "params": "(node: TreeNode) => void",
      "description_zh": "选择节点时调用的回调。"
    },
    {
      "name": "node-unselect",
      "description": "Callback to invoke when a node is unselected.",
      "params": "(node: TreeNode) => void",
      "description_zh": "取消选择节点时调用的回调。"
    },
    {
      "name": "node-expand",
      "description": "Callback to invoke when a node is expanded.",
      "params": "(node: TreeNode) => void",
      "description_zh": "节点展开时调用的回调。"
    },
    {
      "name": "node-collapse",
      "description": "Callback to invoke when a node is collapsed.",
      "params": "(node: TreeNode) => void",
      "description_zh": "节点折叠时调用的回调。"
    },
    {
      "name": "column-resize-end",
      "description": "Callback to invoke when a column is resized.",
      "params": "(event: Event) => void",
      "description_zh": "调整列大小时调用的回调。"
    }
  ],
  "link": "https://primevue.org/treetable/",
  "link_zh": "https://primevue.org/treetable/",
  "methods": []
}
